version: '3.8'

services:
  # Contenedor para el servidor SMTP
  smtp:
    image: boky/postfix
    container_name: smtp-server
    environment:
      - MAIL_DOMAIN=intranet.local
      - SMTP_USER=braulio@admin.com:admin
      - ALLOW_EMPTY_SENDER_DOMAINS=1
      - POSTFIX_myhostname=smtp.intranet.local
      - POSTFIX_mydestination=
      - POSTFIX_mynetworks=172.0.0.0/8,10.0.0.0/8,192.168.0.0/16,127.0.0.0/8
      - POSTFIX_relay_domains=*
    ports:
      - "0.0.0.0:25:25"
    networks:
      - intranet
    restart: unless-stopped

  # DNS Server for internal domain resolution
  dns:
    image: jpillora/dnsmasq
    container_name: dns-server
    ports:
      - "0.0.0.0:53:53/udp"
      - "0.0.0.0:53:53/tcp"
      - "0.0.0.0:8053:8080"
    volumes:
      - ./dns/dnsmasq.conf:/etc/dnsmasq.conf
    networks:
      intranet:
        ipv4_address: 172.20.0.10
    restart: unless-stopped
    cap_add:
      - NET_ADMIN

  # FTP Server for file access
  ftp:
    image: stilliard/pure-ftpd
    container_name: ftp-server
    ports:
      - "0.0.0.0:21:21"
      - "0.0.0.0:30000-30009:30000-30009"
    volumes:
      - ./videos:/home/ftpuser/videos
      - ./data/hls:/home/ftpuser/hls
    environment:
      - PUBLICHOST=10.0.0.100
      - FTP_USER_NAME=ftpuser
      - FTP_USER_PASS=ftppass
      - FTP_USER_HOME=/home/ftpuser
    networks:
      - intranet
    restart: unless-stopped

  # Contenedor para streaming con Nginx-RTMP
  streaming:
    image: alfg/nginx-rtmp
    container_name: stream-server
    ports:
      - "0.0.0.0:1935:1935"   # RTMP port
      - "0.0.0.0:8080:80"     # HTTP interface (note: back to port 80 for this image)
    volumes:
      - ./videos:/var/www/html/videos
      - ./rtmp.nginx.conf:/etc/nginx/nginx.conf
      - ./data/hls:/opt/data/hls
    networks:
      - intranet
    restart: unless-stopped
    command: >
      sh -c "mkdir -p /opt/data/hls && chmod -R 777 /opt/data/hls && nginx"

  # Backend API server
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: tsm-backend
    ports:
      - "0.0.0.0:3001:3001"
    volumes:
      - ./data:/app/data
      - ./data/hls:/opt/data/hls
    networks:
      - intranet
    environment:
      - NODE_ENV=production
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - SMTP_HOST=smtp
      - SMTP_PORT=25
      - SMTP_USER=braulio@admin.com
      - SMTP_PASS=admin
    depends_on:
      - smtp
    restart: unless-stopped

  # Vue.js application container
  webapp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: camera-webapp
    ports:
      - "0.0.0.0:80:80"
    volumes:
      - ./data/hls:/opt/data/hls
    networks:
      - intranet
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    restart: unless-stopped
    command: >
      sh -c "chmod -R 755 /opt/data/hls && nginx -g 'daemon off;'"

networks:
  intranet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

volumes:
  dbdata: